@model List<Mekaniko_Secured.Models.Dto.InvoiceListDto>

<h2>Invoices</h2>

@Html.AntiForgeryToken()

<table class="table table-striped">
    <thead>
        <tr>
            <th class="text-center">Status</th>
            <th class="text-center">Issue</th>
            <th class="text-center">Invoice #</th>
            <th class="text-center">Name</th>
            <th class="text-center">Created</th>
            <th class="text-center">Due Date</th>
            <th class="text-center">Rego #</th>
            <th class="text-center">Total</th>
            <th class="text-center">Sent</th>
            <th class="text-center">Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var invoice in Model)
        {
            <tr>
                <td class="payment-status-column text-center">
                    @if (invoice.IsPaid == true)
                    {
                        <p class="payment-status-paid">Paid</p>
                    }
                    else
                    {
                        <p class="payment-status-not-paid">Not Paid</p>
                    }
                </td>
                <td class="text-center">@invoice.IssueName</td>
                <td class="text-center">@invoice.InvoiceId</td>
                <td class="text-center">@invoice.CustomerName</td>
                <td class="text-center">@invoice.DateAdded?.ToString("MM/dd/yyyy")</td>
                <td class="text-center">@invoice.DueDate?.ToString("MM/dd/yyyy")</td>
                <td class="text-center">@invoice.CarRego</td>
                <td class="text-center">@invoice.TotalAmount</td>
                <td class="text-center">
                    @if (invoice.IsEmailSent == true)
                    {
                        <i class="bi bi-check-lg"></i>
                    }
                    else
                    {
                        <p></p>
                    }
                </td>
                <td class="text-center">
                    <div class="dropdown">
                        <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="actionDropdown_@invoice.InvoiceId" data-bs-toggle="dropdown" aria-expanded="false">
                            <span class="visually-hidden">Toggle Dropdown</span>
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="actionDropdown_@invoice.InvoiceId">
                            <li>
                                <button class="dropdown-item mark-as-paid" data-invoice-id="@invoice.InvoiceId">
                                    <i class="bi bi-check-lg"></i> Mark as Paid
                                </button>
                            </li>
                            <li>
                                <button class="dropdown-item view-pdf" data-invoice-id="@invoice.InvoiceId">
                                    <i class="bi bi-file-pdf"></i> View PDF
                                </button>
                            </li>
                            <li>
                                <a href="#" class="dropdown-item download-pdf" data-invoice-id="@invoice.InvoiceId">
                                    <i class="bi bi-download"></i> Download PDF
                                </a>
                            </li>
                            <li>
                                <button class="dropdown-item send-invoice-email" data-invoice-id="@invoice.InvoiceId">
                                    <i class="bi bi-envelope-paper"></i> Send Email
                                </button>
                            </li>
                            <li>
                                <button class="dropdown-item delete-invoice" data-invoice-id="@invoice.InvoiceId">
                                    <i class="bi bi-trash3-fill"></i> Delete Invoice
                                </button>
                            </li>
                        </ul>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- View PDF Modal -->
<div class="modal fade" id="pdfViewerModal" tabindex="-1" aria-labelledby="pdfViewerModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="pdfViewerModalLabel">View Invoice PDF</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <iframe id="pdfViewerFrame" width="100%" height="600px" frameborder="0"></iframe>
            </div>
        </div>
    </div>
</div>

<!-- Delete Invoice Modal -->
<div class="modal fade" id="deleteInvoiceModal" tabindex="-1" aria-labelledby="deleteInvoiceModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteInvoiceModalLabel">Delete Invoice</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this invoice?</p>
                <p>Invoice ID: <span id="deleteInvoiceId"></span></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteInvoice">Delete</button>
            </div>
        </div>
    </div>
</div>


<div id="scriptData"
     data-mark-as-paid-url="@Url.Action("MarkAsPaid", "Invoice")"
     data-view-pdf-url="@Url.Action("GeneratePdf", "Invoice")"
     data-send-invoice-email-url="@Url.Action("SendInvoiceEmail", "Invoice")"
     data-delete-invoice-url="@Url.Action("DeleteInvoice", "Invoice")">
</div>


@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.19.3/jquery.validate.min.js"></script>
    <script>
        $(document).ready(function () {
            var csrfToken = $('input[name="__RequestVerificationToken"]').val();
            var markAsPaidUrl = $('#scriptData').data('mark-as-paid-url');
            var viewPdfUrl = $('#scriptData').data('view-pdf-url');
            var sendInvoiceEmailUrl = $('#scriptData').data('send-invoice-email-url');
            var deleteInvoiceUrl = $('#scriptData').data('delete-invoice-url');

                    // Mark as Paid functionality
                    $('.mark-as-paid').click(function (e) {
                        e.preventDefault();
                        var invoiceId = $(this).data('invoice-id');
                        console.log("Marking as paid invoice ID:", invoiceId);
                        $.ajax({
                            url: markAsPaidUrl,
                            type: 'POST',
                            data: { invoiceId: invoiceId }, // Send as form data, not JSON
                            headers: {
                                'RequestVerificationToken': csrfToken
                            },
                            success: function (response) {
                                console.log("Response:", response);
                                if (response.success) {
                                    alert(response.message);
                                    location.reload();
                                } else {
                                    alert('Error: ' + response.message);
                                }
                            },
                            error: function (xhr, status, error) {
                                console.error('AJAX error:', xhr.responseText);
                                alert('An error occurred while marking the invoice as paid.');
                            }
                        });
                    });

                    // View PDF functionality
                    $('.view-pdf').click(function (e) {
                        e.preventDefault();
                        var invoiceId = $(this).data('invoice-id');
                        var url = viewPdfUrl + '?id=' + invoiceId;
                        $('#pdfViewerFrame').attr('src', url);
                        $('#pdfViewerModal').modal('show');
                    });

                    // Download PDF functionality
                    $('.download-pdf').click(function (e) {
                        e.preventDefault();
                        var invoiceId = $(this).data('invoice-id');
                        var downloadUrl = viewPdfUrl + '?id=' + invoiceId + '&download=true';
                        window.location.href = downloadUrl;
                    });

                    // Send Invoice Email functionality
                         $('.send-invoice-email').click(function (e) {
                        e.preventDefault();
                        var invoiceId = $(this).data('invoice-id');
                        console.log("Sending email for invoice ID:", invoiceId);
                        $.ajax({
                            url: sendInvoiceEmailUrl,
                            type: 'POST',
                            data: { invoiceId: invoiceId }, // Send as form data, not JSON
                            headers: {
                                'RequestVerificationToken': csrfToken
                            },
                            success: function (response) {
                                console.log("Response:", response);
                                if (response.success) {
                                    alert(response.message);
                                } else {
                                    alert('Error: ' + response.message);
                                }
                            },
                            error: function (xhr, status, error) {
                                console.error('AJAX error:', xhr.responseText);
                                alert('An error occurred while sending the email.');
                            }
                        });
                    });



            // Delete Invoice functionality
            $('.delete-invoice').click(function (e) {
                e.preventDefault();
                var invoiceId = $(this).data('invoice-id');
                $('#deleteInvoiceId').text(invoiceId);
                $('#deleteInvoiceModal').modal('show');
            });

            $('#confirmDeleteInvoice').click(function () {
                var invoiceId = $('#deleteInvoiceId').text();
                $.ajax({
                    url: deleteInvoiceUrl,
                    type: 'POST',
                    data: { invoiceId: invoiceId }, // Send as form data, not JSON
                    headers: {
                        'RequestVerificationToken': csrfToken
                    },
                    success: function (response) {
                        console.log("Response:", response);
                        if (response.success) {
                            alert(response.message);
                            location.reload();
                        } else {
                            alert('Error: ' + response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('AJAX error:', xhr.responseText);
                        alert('An error occurred while deleting the invoice.');
                    }
                });
                $('#deleteInvoiceModal').modal('hide');
            });
                });
    </script>
}